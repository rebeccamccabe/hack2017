def flower_check(player):
  for tile in player.playerhand:
    if tile.suit == "flowers":
      player.revealed.append(tile)
      player.playerhand.remove(tile)
      draw(player) #should technically draw from the back but fine for now #also if flower_check is in Player draw should be as well
      has_cash_money = True

#will need players_list global variable, walls as a global variable, and user_player as the name of one of the players
#start game play
#maybe account for skipped turns in here? by going off of "next player"?


import random
from random import shuffle
import copy

dict_name_to_tile={"B1":["bamboo", 1], "B2":["bamboo", 2], "B3":["bamboo", 3], "B4":["bamboo", 4], "B5":["bamboo", 5],"B6":["bamboo", 6],
                   "B7": ["bamboo", 7], "B8":["bamboo", 8], "B9":["bamboo", 9],
                   "D1":["dots", 1], "D2":["dots", 2], "D3":["dots", 3], "D4":["dots", 4], "D5":["dots", 5],"D6":["dots", 6],
                   "D7": ["dots", 7], "D8":["dots", 8], "D9":["dots", 9], 
                   "C1":["characters", 1], "C2":["characters", 2], "C3":["characters", 3], "C4":["characters", 4], "C5":["characters", 5],"C6":["characters", 6],
                   "C7": ["characters", 7], "C8":["characters", 8], "C9":["characters", 9], 
                   "SN":["specials", 1], "SE":["specials", 2], "SS":["specials", 3], "SW":["specials", 4], "SM":["specials", 5],"SG":["specials", 6], "SB":["specials", 7],
                   "F":["flowers", 0]}

def tile_to_name(suit, rank):
  name = ""
  if suit == "bamboo":
    name += "B"
    name += str(rank+1)
  elif suit == "dots":
    name += "D"
    name += str(rank+1)
  elif suit == "characters":
    name += "C"
    name += str(rank+1)
  elif suit == "flowers":
    name = "F"
  elif suit == "specials":
    name += "S"
    specialtiles = ["N", "E", "S", "W", "M", "G", "B"]
    name += specialtiles[rank]
  return name



class Tile:
    def __init__(self, suit, rank):
        self.name=tile_to_name(suit, rank)
        self.suit=suit
        self.rank=rank
    def __repr__(self):
        return self.name

suits = ["bamboo", "dots", "characters", "specials", "flowers"]

if __name__ == "__main__":
	tileset = []
	for i in range(4): # 4 instances of each 
		for j in range(len(suits) - 2): # each of the first three suits
			for k in range(9):
				t = Tile(suits[j], k)
				tileset.append(t)
		for k in range(7):
			t = Tile(suits[3], k)
			tileset.append(t)
	for i in range(8):
		tileset.append(Tile(suits[4], 0)) # adding 8 flower tiles
	print(tileset)

	walls = copy.deepcopy(tileset)
	shuffle(walls)

	#set no win to false
	no_win=False
	#create players
	user_player_1= Player("player1user", False)
	cpu_player_2= Player("player2", True)
	cpu_player_3= Player("player3", True)
	cpu_player_4= Player("player4", True)

	players= [user_player_1, cpu_player_2, cpu_player_3, cpu_player_4]

	for player in players:
	  for i in range(13):
	    player.playerhand.append(walls[0])
	    del walls[0]

	for player in players:
	  print(player.name+": "+str(player.playerhand))
	  flower_check(player)
	  print(player.name+": "+str(player.playerhand))

	next_player=user_player_1

	while no_win:
	  turn(next_player) #i have no idea if this loop will work
